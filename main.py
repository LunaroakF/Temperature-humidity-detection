from machine import I2C, Pin, SoftI2C
import ssd1306
import framebuf
import utime
from dht import DHT11, InvalidChecksum

i2c = I2C(0, sda=Pin(0), scl=Pin(1), freq=1000000)
oled = ssd1306.SSD1306_I2C(128, 64, i2c)

pin = Pin(28, Pin.OUT, Pin.PULL_DOWN)
sensor = DHT11(pin)

fontlib = {
    "温": [0x00,0x08,0x43,0xFC,0x32,0x08,0x12,0x08,0x83,0xF8,0x62,0x08,0x22,0x08,0x0B,0xF8,
0x10,0x00,0x27,0xFC,0xE4,0xA4,0x24,0xA4,0x24,0xA4,0x24,0xA4,0x2F,0xFE,0x20,0x00,],
    "湿": [0x00,0x08,0x47,0xFC,0x34,0x08,0x14,0x08,0x87,0xF8,0x64,0x08,0x24,0x08,0x0F,0xF8,
0x11,0x20,0x21,0x20,0xE9,0x24,0x25,0x28,0x23,0x30,0x21,0x24,0x3F,0xFE,0x20,0x00],
    "度": [0x01,0x00,0x00,0x84,0x3F,0xFE,0x22,0x20,0x22,0x28,0x3F,0xFC,0x22,0x20,0x23,0xE0,
0x20,0x00,0x2F,0xF0,0x22,0x20,0x21,0x40,0x20,0x80,0x43,0x60,0x8C,0x1E,0x30,0x04,],
    "℃": [0x30,0x00,0x48,0x00,0x48,0x00,0x33,0xE8,0x06,0x38,0x0C,0x18,0x0C,0x08,0x0C,0x00,
0x0C,0x00,0x0C,0x00,0x0C,0x00,0x06,0x08,0x03,0x10,0x01,0xE0,0x00,0x00,0x00,0x00,],
    "%": [0x00,0x00,0x00,0x00,0x0C,0x04,0x12,0x08,0x12,0x10,0x0C,0x20,0x00,0x40,0x00,0x80,
0x01,0x00,0x02,0x18,0x04,0x24,0x08,0x24,0x10,0x18,0x00,0x00,0x00,0x00,0x00,0x00,],
    "R": [0x00,0x00,0x00,0x00,0x1F,0xE0,0x0C,0x30,0x0C,0x18,0x0C,0x18,0x0C,0x18,0x0C,0x30,
0x0F,0xE0,0x0C,0xC0,0x0C,0x70,0x0C,0x30,0x0C,0x38,0x1E,0x1C,0x00,0x00,0x00,0x00,],
    "H": [0x00,0x00,0x00,0x00,0x1E,0x3C,0x0C,0x18,0x0C,0x18,0x0C,0x18,0x0C,0x18,0x0F,0xF8,
0x0C,0x18,0x0C,0x18,0x0C,0x18,0x0C,0x18,0x0C,0x18,0x1E,0x3C,0x00,0x00,0x00,0x00,],
}


def text_hz(hz, x, y):
    zm = bytearray(fontlib[hz])
    buf = framebuf.FrameBuffer(zm, 16, 16, framebuf.MONO_HLSB)
    oled.blit(buf, x, y)

def doshow(text,x,y):
    for hz in text:
        text_hz(hz, x, y)
        x += 16
        
def doshowsm(text,x,y):
    for hz in text:
        text_hz(hz, x, y)
        x += 12

def displayrate(rate1,rate2,sec):
    doshow("温度℃",12,0)
    doshow("湿度%",72,0)
    oled.text(str(rate1), 16, 32)
    oled.text(str(rate2), 76, 32)
    #doshowsm("℃",112,50)
    if sec == 16:
        oled.text("----------------", 1, 60)
    if sec == 15:
        oled.text("---------------", 1, 60)
    if sec == 14:
        oled.text("--------------", 1, 60)
    if sec == 13:
        oled.text("-------------", 1, 60)
    if sec == 12:
        oled.text("------------", 1, 60)
    if sec == 11:
        oled.text("-----------", 1, 60)
    if sec == 10:
        oled.text("----------", 1, 60)
    if sec == 9:
        oled.text("---------", 1, 60)
    if sec == 8:
        oled.text("--------", 1, 60)
    if sec == 7:
        oled.text("-------", 1, 60)
    if sec == 6:
        oled.text("------", 1, 60)
    if sec == 5:
        oled.text("-----", 1, 60)
    if sec == 4:
        oled.text("----", 1, 60)
    if sec == 3:
        oled.text("---", 1, 60)
    if sec == 2:
        oled.text("--", 1, 60)
    if sec == 1:
        oled.text("-", 1, 60)
    oled.show()
    oled.fill(0)
    x = 48
    y = 0


displayrate(999,999,16)
utime.sleep_ms(1000)
while True:
    
    t  = (sensor.temperature)
    th = t*1.8+32
    h = (sensor.humidity)
    #print("Temperature: {}".format(t))
    #print("Humidity: {}".format(sensor.humidity))
    for i in range(17):
        utime.sleep_ms(50)
        displayrate(t,h,16-i)
        if i == 16:
            utime.sleep_ms(50)
            for u in range(17):
                utime.sleep_ms(50)
                displayrate(t,h,u)
